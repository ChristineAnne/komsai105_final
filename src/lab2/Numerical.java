package lab2;


import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author RizelleAnn
 */
public class Numerical extends javax.swing.JFrame {
    private int size, index = 0;
    private String sizeInputString = "", title = "";
    private boolean ifEditSize = false, isEditTitle = false;
    private boolean sizeIsDone = false, titleIsDone = false, dataIsDone = false;
    private String data = "";
    private ArrayList<Integer> dataArr = new ArrayList<Integer>();
    private int numOfClasses = 0;
    private String[][] fdt;
    private int upperValue;
    private int lowerValue;
    private boolean dataButtonClicked = false;
    private boolean fdtIsClicked;
    int collapse = 0;
    int width;
    FDTtable table;
    Numerical numeric;
    private String dataType;
    private float[] fdata;
    private int[] idata;
    /**
     * Creates new form Numeric
     */
    /*public Numerical() {
        initComponents();
    }*/
    public Numerical(){
        initComponents();
    }
    public Numerical(String title){
        this.fdtIsClicked = false;
        this.title = title;
        initComponents();
        this.setTitle(title);

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sizeLabel = new javax.swing.JLabel();
        sizeInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dataLabel = new javax.swing.JLabel();
        dataInput = new javax.swing.JTextField();
        inputList = new javax.swing.JComboBox<>();
        editSizeButton = new javax.swing.JButton();
        viewFDTButton = new javax.swing.JButton();
        viewDataButton = new javax.swing.JButton();
        dataLimitLabel = new javax.swing.JLabel();

        setTitle("Numerical Data");
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(500, 150));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        sizeLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        sizeLabel.setForeground(new java.awt.Color(255, 255, 255));
        sizeLabel.setText("Sample Size:");

        sizeInput.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        sizeInput.setText("size here..");
        sizeInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sizeInputMouseClicked(evt);
            }
        });
        sizeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeInputActionPerformed(evt);
            }
        });
        sizeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sizeInputKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("size >= 25");

        dataLabel.setForeground(new java.awt.Color(255, 255, 255));
        dataLabel.setText("Data Input:");

        dataInput.setEditable(false);
        dataInput.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        dataInput.setText("input here..");
        dataInput.setEnabled(false);
        dataInput.setFocusable(false);
        dataInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataInputMouseClicked(evt);
            }
        });
        dataInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataInputActionPerformed(evt);
            }
        });
        dataInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dataInputKeyReleased(evt);
            }
        });

        inputList.setEnabled(false);
        inputList.setFocusable(false);

        editSizeButton.setText("Edit Size");
        editSizeButton.setEnabled(false);
        editSizeButton.setFocusable(false);

        viewFDTButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewFDTButton.setText("View Frequency Distribution Table");
        viewFDTButton.setEnabled(false);
        viewFDTButton.setFocusable(false);
        viewFDTButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                viewFDTButtonMouseReleased(evt);
            }
        });

        viewDataButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        viewDataButton.setText("View Data ");
        viewDataButton.setEnabled(false);
        viewDataButton.setFocusable(false);
        viewDataButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                viewDataButtonMouseReleased(evt);
            }
        });

        dataLimitLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        dataLimitLabel.setForeground(new java.awt.Color(255, 255, 255));
        dataLimitLabel.setText("data >= 0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(viewDataButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(sizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sizeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dataLimitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editSizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputList, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(viewFDTButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editSizeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataLimitLabel)
                .addGap(4, 4, 4)
                .addComponent(viewDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewFDTButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataInputActionPerformed

    private void sizeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeInputActionPerformed
        // TODO add your handling code here:
        
        sizeInputString = sizeInput.getText();
    }//GEN-LAST:event_sizeInputActionPerformed

    private void sizeInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sizeInputKeyReleased
       
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                size = Integer.parseInt(sizeInputString);
                if(size < 25){
                    JOptionPane.showMessageDialog(this,"Input Must Be Greater Than Or Equal To 25", "Error", JOptionPane.ERROR_MESSAGE);
                    sizeInput.setText(""); 
                } else {
                    dataInput.setEnabled(true);
                    dataInput.setFocusable(true);
                    dataInput.setEditable(true);
                    inputList.setFocusable(true);
                    inputList.setEnabled(true);
                    sizeInput.setFocusable(true);
                    sizeInput.setEnabled(false);
                    sizeInput.setEditable(false);
                    
                }
           } catch (Exception e){
               JOptionPane.showMessageDialog(this,"Input Must Be Integer", "Error", JOptionPane.ERROR_MESSAGE);
                sizeInput.setText("");
           }
        }
    }//GEN-LAST:event_sizeInputKeyReleased

    private void sizeInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sizeInputMouseClicked
        // TODO add your handling code here:
        sizeInput.setText("");
    }//GEN-LAST:event_sizeInputMouseClicked

    private void dataInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataInputMouseClicked
        // TODO add your handling code here:
        dataInput.setText("");    
    }//GEN-LAST:event_dataInputMouseClicked

    private void dataInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataInputKeyReleased
       
        String dataStr = dataInput.getText();
        
        float ftemp = 0;
        int itemp = 0;
        if(index == 0){
            if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                try {
                    ftemp = Float.parseFloat(dataStr);
                    if(ftemp % 1 == 0) {
                        itemp = Integer.parseInt(dataStr);
                        dataType = "int";
                        if(itemp < 0){
                            JOptionPane.showMessageDialog(null, "Input Should be Greater than or Equal to Zero.");
                        } else {
                            idata = new int[size];
                            idata[0] = itemp;
                            System.out.println("data" + index +" = " + idata[0]);
                            inputList.addItem("[" + (index+1) + "]  " + dataStr);
                            index++;     
                        }
                    } else {
                        dataType = "float";    
                        System.out.println("float\n");
                        if(ftemp < 0.0){
                            JOptionPane.showMessageDialog(null, "Input Should be Greater than or Equal to Zero.");
                        } else {
                            fdata = new float[size];
                            fdata[0] = ftemp;
                            inputList.addItem("[" + (index+1) + "]  " + dataStr);
                            index++;
                        }
                    }
                    
                    dataInput.setText("");
                } catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Input Should be a Number.");
                    dataInput.setText("");
                }
            }
        } else {
            if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                if(dataType == "float"){
                    try {
                        ftemp = Float.parseFloat(dataStr);
                        if(ftemp % 1 == 0) {
                            System.out.println("int in float\n");
                            JOptionPane.showMessageDialog(null, "Input Should be a Float.");
                            dataInput.setText("");
                        } else {
                            fdata[index] = ftemp;
                            inputList.addItem("[" + (index+1) + "]  " + dataStr);
                            index++;
                        }
                        dataInput.setText("");
                              
                    } catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Input Should be a Float.");
                        dataInput.setText("");
                    }
                } else if(dataType == "int"){
                    try {
                        itemp = Integer.parseInt(dataStr);
                        if(itemp % 1 != 0){
                             JOptionPane.showMessageDialog(null, "Input Should be an Integer.");
                            dataInput.setText("");
                        } else {
                            if(itemp < 0){
                                JOptionPane.showMessageDialog(null, "Input Should be Greater than or Equal to Zero.");
                             } else {
                                idata[index] = itemp;
                                System.out.println("data" + index +" = " + idata[index]);

                                inputList.addItem("[" + (index+1) + "]  " + dataStr);
                                index++;     
                            }
                            dataInput.setText("");
                        }
                    } catch(Exception ex){
                        JOptionPane.showMessageDialog(null, "Input Should be an Integer.");
                        dataInput.setText("");
                    }
                }     
            }
        }
        if(index >= size){
            dataInput.setFocusable(false);
            dataInput.setEnabled(false);
            dataInput.setEditable(false);
            dataIsDone = true;
            viewDataButton.setEnabled(true);
            viewDataButton.setFocusable(true);
            viewFDTButton.setFocusable(true);
            viewFDTButton.setEnabled(true);
            System.out.println("rawData = " + Arrays.toString(fdata));

        }
        
        
    }//GEN-LAST:event_dataInputKeyReleased

    private void viewDataButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewDataButtonMouseReleased
        // TODO add your handling code here:
        setFocusable(false);
        InputDataDisplay display;
        if(dataType == "float"){
            display = new InputDataDisplay(title, this, "float", fdata);
        } else {
            display = new InputDataDisplay(title, this, "int", idata);
        }
        display.setVisible(true);
        display.setFocusable(true);
      
    }//GEN-LAST:event_viewDataButtonMouseReleased

    private void viewFDTButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewFDTButtonMouseReleased
        this.setVisible(false);
        if(dataType == "float"){
            FDTtable table = new FDTtable(this,title, "float", fdata, size);
            table.setVisible(true);
            table.setLocation(500,150);
        } else {
            
            FDTtable table = new FDTtable(this,title, "int", idata, size);
            table.setVisible(true);
            table.setLocation(500,150);
        }
    }//GEN-LAST:event_viewFDTButtonMouseReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
        
        MenuFrame menu = new MenuFrame();
        menu.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Numerical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Numerical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Numerical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Numerical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Numerical().setVisible(true);
            }
        });*/
    }
    

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dataInput;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JLabel dataLimitLabel;
    private javax.swing.JButton editSizeButton;
    private javax.swing.JComboBox<String> inputList;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField sizeInput;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JButton viewDataButton;
    private javax.swing.JButton viewFDTButton;
    // End of variables declaration//GEN-END:variables
}
