/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab3;

import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author localuser
 */
public class Ungrouped extends javax.swing.JFrame {
    private String sizeStr;
    private int size;
    private int[] idata;
    private float[] fdata;
    private int ctr = 0;
    private String dataType = "";
    private static String title;
    RawData rawdata;

    /**
     * Creates new form Menu
     */
    public Ungrouped(String title) {
        this.title = title;
        initComponents();
        setLocation(500,150);
        titleLabel.setText(title);
    }
    public Ungrouped() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sizeInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        editSizeBtn = new javax.swing.JButton();
        dataInput = new javax.swing.JTextField();
        inputList = new javax.swing.JComboBox();
        resetBtn = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        showDataBtn = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setTitle("Ungrouped Data");
        setName("menuFrame"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        sizeInput.setEditable(false);
        sizeInput.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        sizeInput.setText("size here...");
        sizeInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sizeInputMouseClicked(evt);
            }
        });
        sizeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeInputActionPerformed(evt);
            }
        });
        sizeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sizeInputKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Size:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Data:");

        editSizeBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        editSizeBtn.setText(" Edit Size");
        editSizeBtn.setToolTipText("");
        editSizeBtn.setEnabled(false);
        editSizeBtn.setFocusable(false);
        editSizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                editSizeBtnMouseReleased(evt);
            }
        });

        dataInput.setEditable(false);
        dataInput.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        dataInput.setText("input data here...");
        dataInput.setEnabled(false);
        dataInput.setFocusable(false);
        dataInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataInputMouseClicked(evt);
            }
        });
        dataInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataInputActionPerformed(evt);
            }
        });
        dataInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dataInputKeyReleased(evt);
            }
        });

        inputList.setEnabled(false);
        inputList.setFocusable(false);

        resetBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resetBtn.setText("RESET ALL");
        resetBtn.setEnabled(false);
        resetBtn.setFocusable(false);
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                resetBtnMouseReleased(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("title");

        showDataBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        showDataBtn.setText("Show Data");
        showDataBtn.setEnabled(false);
        showDataBtn.setFocusable(false);
        showDataBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                showDataBtnMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showDataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sizeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editSizeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputList, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(editSizeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(sizeInput)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputList, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showDataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sizeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeInputActionPerformed

    private void dataInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataInputActionPerformed

    private void sizeInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sizeInputMouseClicked
        // TODO add your handling code here:
 
        sizeInput.setText("");
        sizeInput.setEditable(true);
        sizeInput.setEnabled(true);
    }//GEN-LAST:event_sizeInputMouseClicked

    private void sizeInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sizeInputKeyReleased
        // TODO add your handling code here:
        sizeStr = sizeInput.getText();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try{
                size = Integer.parseInt(sizeStr);
                if(size < 5){
                    JOptionPane.showMessageDialog(null, "Input should be Greater than or equal to 5.");
                    sizeInput.setText("");
                } else {
                    setSizeArea(false);
                    setEditArea(true);
                    setDataInputArea(true);
                    setInputListArea(true);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Input should be an integer.");
                sizeInput.setText("");         
            }
        } 
    }//GEN-LAST:event_sizeInputKeyReleased

    private void dataInputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataInputMouseClicked
        // TODO add your handling code here:
        dataInput.setText("");
    }//GEN-LAST:event_dataInputMouseClicked

    private void dataInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataInputKeyReleased
        // TODO add your handling code here:
        String dataStr = dataInput.getText();
        
        float ftemp = 0;
        int itemp = 0;
        if(ctr == 0){
            if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                try {
                    ftemp = Float.parseFloat(dataStr);
                    if(ftemp % 1 == 0) {
                        itemp = Integer.parseInt(dataStr);
                        dataType = "int";
                        if(itemp < 0){
                            JOptionPane.showMessageDialog(null, "Input Should be Greater than or Equal to Zero.");
                        } else {
                            idata = new int[size];
                            idata[0] = itemp;
                            inputList.addItem("[" + (ctr+1) + "]  " + dataStr);
                            ctr++;     
                        }
                    } else {
                        dataType = "float";    
                        System.out.println("float\n");
                        if(ftemp < 0.0){
                            JOptionPane.showMessageDialog(null, "Input Should be Greater than or Equal to Zero.");
                        } else {
                            fdata = new float[size];
                            fdata[0] = ftemp;
                            inputList.addItem("[" + (ctr+1) + "]  " + dataStr);
                            ctr++;
                        }
                    }
                    
                    dataInput.setText("");
                } catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Input Should be a Number.");
                    dataInput.setText("");
                }
            }
        } else {
            if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                if(dataType == "float"){
                    try {
                        ftemp = Float.parseFloat(dataStr);
                        if(ftemp % 1 == 0) {
                            System.out.println("int in float\n");
                            JOptionPane.showMessageDialog(null, "Input Should be a Float.");
                            dataInput.setText("");
                        } else {
                            fdata[ctr] = ftemp;
                            inputList.addItem("[" + (ctr+1) + "]  " + dataStr);
                            ctr++;
                        }
                        dataInput.setText("");
                              
                    } catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Input Should be a Float.");
                        dataInput.setText("");
                    }
                } else if(dataType == "int"){
                    try {
                        itemp = Integer.parseInt(dataStr);
                        if(itemp % 1 != 0){
                             JOptionPane.showMessageDialog(null, "Input Should be an Integer.");
                            dataInput.setText("");
                        } else {
                            if(itemp < 0){
                                JOptionPane.showMessageDialog(null, "Input Should be Greater than or Equal to Zero.");
                             } else {
                                idata[ctr] = itemp;
                                inputList.addItem("[" + (ctr+1) + "]  " + dataStr);
                                ctr++;     
                            }
                            dataInput.setText("");
                        }
                    } catch(Exception ex){
                        JOptionPane.showMessageDialog(null, "Input Should be an Integer.");
                        dataInput.setText("");
                    }
                }     
            }
        }
        if(ctr >= size){
            setDataInputArea(false);
            setResetArea(true);
            setShowDataArea(true);
        }
    }//GEN-LAST:event_dataInputKeyReleased

    private void resetBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseReleased
        // TODO add your handling code here:
        ctr = 0;
        size = 0;
        if(dataType == "float"){
            fdata = new float[size]; 
        } else if(dataType == "int"){
            idata = new int[size];
        }
        inputList.removeAllItems();
        setSizeArea(true);
        setDataInputArea(false);
        setResetArea(false);
        setShowDataArea(false);
        setInputListArea(false);
    }//GEN-LAST:event_resetBtnMouseReleased

    private void showDataBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showDataBtnMouseReleased
        // TODO add your handling code here:
        if(dataType == "float"){
            rawdata = new RawData(title,"float", fdata, this, size);
        } else if(dataType == "int"){
            rawdata = new RawData(title, "int", idata, this,size);
        } 
        
        rawdata.setVisible(true);
        rawdata.setLocation(500,150);
        this.setVisible(false);
    }//GEN-LAST:event_showDataBtnMouseReleased

    private void editSizeBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editSizeBtnMouseReleased
        // TODO add your handling code here:
        sizeInput.setFocusable(true);
        sizeInput.setEditable(true);
        sizeInput.setEnabled(true);
        inputList.removeAllItems();
        sizeInput.setText("");
    }//GEN-LAST:event_editSizeBtnMouseReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        MainMenu menu = new MainMenu();
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_formWindowClosing
    
    
    public void setSizeArea(boolean status){
        sizeInput.setFocusable(status);
        sizeInput.setEditable(status);
        sizeInput.setEnabled(status);
    }
    
    public void setDataInputArea(boolean status){
        dataInput.setEnabled(status);
        dataInput.setFocusable(status);
        dataInput.setEditable(status);
    }
    
    public void setEditArea(boolean status){
        editSizeBtn.setEnabled(status);
        editSizeBtn.setFocusable(status);
    }
    
    public void setInputListArea(boolean status){
        inputList.setFocusable(true);
        inputList.setEnabled(true);  
    }
    
    public void setResetArea(boolean status){
        resetBtn.setEnabled(status);
        resetBtn.setFocusable(status);
    }
    
    public void setShowDataArea(boolean status){
        showDataBtn.setEnabled(status);
        showDataBtn.setFocusable(status);
    }
    /**{
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ungrouped.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ungrouped.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ungrouped.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ungrouped.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ungrouped().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dataInput;
    private javax.swing.JButton editSizeBtn;
    private javax.swing.JComboBox inputList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton showDataBtn;
    private javax.swing.JTextField sizeInput;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
